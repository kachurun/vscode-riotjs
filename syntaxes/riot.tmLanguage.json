{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "RiotJS",
  "scopeName": "source.riot",
  "patterns": [
    { "include": "#root-component" },
    { "include": "#invalid-content" }
  ],
  "repository": {
    "root-component": {
      "begin": "(<)([a-zA-Z][a-zA-Z0-9:-]*)",
      "beginCaptures": {
        "1": { "name": "punctuation.definition.tag.begin.html" },
        "2": { "name": "entity.name.tag.html" }
      },
      "end": "(</)(\\2)(>)",
      "endCaptures": {
        "1": { "name": "punctuation.definition.tag.begin.html" },
        "2": { "name": "entity.name.tag.html" },
        "3": { "name": "punctuation.definition.tag.end.html" }
      },
      "patterns": [
        {
          "begin": "\\G",
          "end": "(>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.end.html" }
          },
          "patterns": [
            { "include": "#tag-attributes" }
          ]
        },
        { "include": "#script" },
        { "include": "#style" },
        { "include": "#tags" },
        { "include": "#inner-text-expression" },
        { "include": "#comments" }
      ],
      "name": "meta.component.riot",
      "contentName": "meta.component.content.riot"
    },
    "invalid-content": {
      "match": ".",
      "name": "invalid.illegal.outside-component.riot"
    },
    "tags": {
      "patterns": [
        {
          "begin": "(<)([a-zA-Z][a-zA-Z0-9:-]*)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.html" },
            "2": { "name": "entity.name.tag.html" }
          },
          "end": "(/?>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.end.html" }
          },
          "name": "meta.tag.any.html",
          "patterns": [
            {
              "match": "\\s+([^\\s\\x00\"'>/=][^\\s\"'>/=]*)\\s*(=)\\s*({)",
              "captures": {
                "1": { "name": "entity.other.attribute-name.html" },
                "2": { "name": "punctuation.separator.key-value.html" },
                "3": { "name": "punctuation.section.embedded.begin.riot" }
              },
              "push": {
                "end": "}",
                "endCaptures": {
                  "0": { "name": "punctuation.section.embedded.end.riot" }
                },
                "patterns": [
                  { "include": "source.js" }
                ]
              }
            },
            {
              "match": "\\s+([^\\s\\x00\"'>/=][^\\s\"'>/=]*)\\s*(=)\\s*(\"[^\"]*\"|'[^']*'|[^\\s\"'=<>`]+)",
              "captures": {
                "1": { "name": "entity.other.attribute-name.html" },
                "2": { "name": "punctuation.separator.key-value.html" },
                "3": { 
                  "patterns": [
                    { "include": "#string-double-quoted" },
                    { "include": "#string-single-quoted" },
                    {
                      "match": "[^\\s\"'=<>`]+",
                      "name": "string.unquoted.html"
                    }
                  ]
                }
              }
            },
            {
              "match": "\\s*(=)(?!\\s*{)",
              "name": "invalid.illegal.equals-sign.html"
            },
            {
              "match": "\\s*([\"'])[^\"']*\\1",
              "name": "invalid.illegal.attribute-value.html"
            },
            {
              "match": "\\s*([\"'])",
              "name": "invalid.illegal.quote.html"
            },
            {
              "match": "(?<!\\s)([^\\s\\x00\"'>/=][^\\s\"'>/=]*)\\s*(=)\\s*(\"[^\"]*\"|'[^']*'|{[^}]*}|[^\\s\"'=<>`]+)",
              "captures": {
                "1": { "name": "invalid.illegal.attribute-name.html" },
                "2": { "name": "invalid.illegal.equals-sign.html" },
                "3": { "name": "invalid.illegal.attribute-value.html" }
              }
            },
            { "include": "#tag-attributes" }
          ]
        },
        {
          "begin": "(</)((?!script|style)[a-zA-Z][a-zA-Z0-9:-]*)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.begin.html" },
            "2": { "name": "entity.name.tag.html" }
          },
          "end": "(>)",
          "endCaptures": {
            "1": { "name": "punctuation.definition.tag.end.html" }
          },
          "name": "meta.tag.any.html"
        }
      ]
    },
    "script": {
      "begin": "(<)(script)\\b",
      "beginCaptures": {
        "1": { "name": "punctuation.definition.tag.begin.html" },
        "2": { "name": "entity.name.tag.script.html" }
      },
      "end": "(</)(script)(>)",
      "endCaptures": {
        "1": { "name": "punctuation.definition.tag.begin.html" },
        "2": { "name": "entity.name.tag.script.html" },
        "3": { "name": "punctuation.definition.tag.end.html" }
      },
      "patterns": [
        { "include": "#tag-attributes" },
        {
          "begin": "(>)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.end.html" }
          },
          "end": "(?=</script>)",
          "contentName": "source.js",
          "patterns": [
            { "include": "source.js" }
          ]
        }
      ]
    },
    "style": {
      "begin": "(<)(style)\\b",
      "beginCaptures": {
        "1": { "name": "punctuation.definition.tag.begin.html" },
        "2": { "name": "entity.name.tag.style.html" }
      },
      "end": "(</)(style)(>)",
      "endCaptures": {
        "1": { "name": "punctuation.definition.tag.begin.html" },
        "2": { "name": "entity.name.tag.style.html" },
        "3": { "name": "punctuation.definition.tag.end.html" }
      },
      "patterns": [
        { "include": "#tag-attributes" },
        {
          "begin": "(>)",
          "beginCaptures": {
            "1": { "name": "punctuation.definition.tag.end.html" }
          },
          "end": "(?=</style>)",
          "contentName": "source.css",
          "patterns": [
            { "include": "source.css" }
          ]
        }
      ]
    },
    "tag-attributes": {
      "patterns": [
        { "include": "#tag-style-attribute" },
        { "include": "#tag-id-attribute" },
        { "include": "#tag-generic-attribute" },
        { "include": "#tag-invalid-standalone-equals" },
        { "include": "#tag-invalid-standalone-quotes" }
      ]
    },
    "tag-generic-attribute": {
      "patterns": [
        {
          "begin": "(?<=\\s)([^\\s\\x00\"'>/=][^\\s\"'>/=]*)\\s*(=)\\s*({)",
          "beginCaptures": {
            "1": { "name": "entity.other.attribute-name.html" },
            "2": { "name": "punctuation.separator.key-value.html" },
            "3": { "name": "punctuation.section.embedded.begin.riot" }
          },
          "end": "}",
          "endCaptures": {
            "0": { "name": "punctuation.section.embedded.end.riot" }
          },
          "contentName": "meta.embedded.expression.riot source.js.embedded.riot",
          "patterns": [
            { "include": "source.js" }
          ]
        },
        {
          "match": "(?<=\\s)([^\\s\\x00\"'>/=][^\\s\"'>/=]*)\\s*(=)\\s*(\"[^\"]*\"|'[^']*'|[^\\s\"'=<>`]+)",
          "captures": {
            "1": { "name": "entity.other.attribute-name.html" },
            "2": { "name": "punctuation.separator.key-value.html" },
            "3": { 
              "patterns": [
                { "include": "#string-double-quoted" },
                { "include": "#string-single-quoted" },
                {
                  "match": "[^\\s\"'=<>`]+",
                  "name": "string.unquoted.html"
                }
              ]
            }
          }
        },
        {
          "match": "(?<=\\s)([^\\s\\x00\"'>/=][^\\s\"'>/=]*)",
          "captures": {
            "1": { "name": "entity.other.attribute-name.html" }
          }
        }
      ]
    },
    "tag-invalid-standalone-equals": {
      "match": "(?<!\\s|[^\\s\\x00\"'>/=][^\\s\"'>/=]*\\s*)(=)\\s*(\"[^\"]*\"|'[^']*'|{[^}]*}|[^\\s\"'=<>`]+)",
      "captures": {
        "1": { "name": "invalid.illegal.equals-sign.html" },
        "2": { "name": "invalid.illegal.attribute-value.html" }
      }
    },
    "tag-invalid-standalone-quotes": {
      "match": "(?<!\\s*=\\s*)(\"[^\"]*\"|'[^']*')",
      "name": "invalid.illegal.attribute-value.html"
    },
    "string-double-quoted": {
      "name": "string.quoted.double.html",
      "begin": "\"",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.html" }
      },
      "end": "\"",
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.html" }
      },
      "patterns": [
        { "include": "#escaped-curly-braces" },
        { "include": "#inner-text-expression" }
      ]
    },
    "string-single-quoted": {
      "name": "string.quoted.single.html",
      "begin": "'",
      "beginCaptures": {
        "0": { "name": "punctuation.definition.string.begin.html" }
      },
      "end": "'",
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.html" }
      },
      "patterns": [
        { "include": "#escaped-curly-braces" },
        { "include": "#inner-text-expression" }
      ]
    },
    "inner-text-expression": {
      "begin": "(?<!\\\\){",
      "beginCaptures": {
        "0": { "name": "punctuation.section.embedded.begin.riot" }
      },
      "end": "}",
      "endCaptures": {
        "0": { "name": "punctuation.section.embedded.end.riot" }
      },
      "contentName": "meta.embedded.expression.riot source.js.embedded.riot",
      "patterns": [
        { "include": "source.js" }
      ]
    },
    "comments": {
      "begin": "<!--",
      "end": "-->",
      "name": "comment.block.html"
    },
    "tag-style-attribute": {
      "begin": "\\b(style)\\s*(=)\\s*(\")",
      "beginCaptures": {
        "1": { "name": "entity.other.attribute-name.html" },
        "2": { "name": "punctuation.separator.key-value.html" },
        "3": { "name": "string.quoted.double.html punctuation.definition.string.begin.html" }
      },
      "end": "\"",
      "endCaptures": {
        "0": { "name": "string.quoted.double.html punctuation.definition.string.end.html" }
      },
      "contentName": "meta.embedded.line.css",
      "patterns": [
        { "include": "source.css#property-names" },
        { "include": "source.css#property-values" }
      ]
    },
    "escaped-curly-braces": {
      "match": "\\\\{",
      "name": "constant.character.escape.riot"
    },
    "tag-invalid-no-space-attribute": {
      "match": "(?<=[a-zA-Z0-9:-])\\s*(=)\\s*(\"[^\"]*\"|'[^']*'|{[^}]*}|[^\\s\"'=<>`]+)",
      "captures": {
        "1": { "name": "invalid.illegal.equals-sign.html" },
        "2": { "name": "invalid.illegal.attribute-value.html" }
      }
    }
  }
}
